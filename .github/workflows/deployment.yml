name: Deploy NodeJS app to GCloud App Engine

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: install # will run `yarn install` command

      - name: Run unit tests
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: test # will run `yarn test` command

      - name: Setup GCloud environment and authenticate
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          project_id: enamel-step-2020
          service_account_key: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      - name: Load secrets from GCloud Secret Manager
        id: secrets
        uses: GoogleCloudPlatform/github-actions/get-secretmanager-secrets@master
        with:
          secrets: |-
            DB_DATABASE:enamel-step-2020/DB_DATABASE
            DB_HOST:enamel-step-2020/DB_HOST
            DB_PASSWORD:enamel-step-2020/DB_PASSWORD
            DB_USERNAME:enamel-step-2020/DB_USERNAME
            GOOGLE_APPLICATION_CREDENTIALS:enamel-step-2020/GOOGLE_APPLICATION_CREDENTIALS

      - name: Build NodeJS and React application
        uses: borales/actions-yarn@v2.0.0
        with:
          cmd: build # will run `yarn build` command
        env:
          DB_DATABASE: ${{ steps.secrets.outputs.DB_DATABASE }}
          DB_HOST: ${{ steps.secrets.outputs.DB_HOST }}
          DB_PASSWORD: ${{ steps.secrets.outputs.DB_PASSWORD }}
          DB_USERNAME: ${{ steps.secrets.outputs.DB_USERNAME }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.secrets.outputs.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Deploy to GCloud App Engine
        run: gcloud app deploy --quiet
